image: microsoft/dotnet:2.1-sdk

variables:
  IMAGE_TAG: ${CI_COMMIT_REF_NAME}-${CI_PIPELINE_ID}
  Solution: ./src/Blog.Api/Blog.Api.csproj
  Registry: registry-vpc.cn-shanghai.aliyuncs.com
stages:
    - test
    - build
    - deploy

job_build:
    stage: test
    before_script:
        - echo building...
        - dotnet --info
        - dotnet restore $Solution
    script:
        - dotnet build $Solution

.unit_test:
     stage: test
     before_script:
        - dotnet restore $Solution
     script: 
        - dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutputDirectory=../../coverage
     artifacts:
        when: on_success
        name: "code-coverage-${CI_PROJECT_PATH_SLUG}_${CI_COMMIT_REF_NAME}_pipeline${CI_PIPELINE_ID}_job${CI_JOB_ID}"
        expire_in: 1 mos and 2 weeks
        paths:
          - coverage/


    
publish_package:
    stage: test
    before_script:
        - dotnet --info
        - dotnet build $Solution
    script:
        - dotnet publish -c Release $Solution  -o ../../publish
    artifacts:
        name: "${CI_PROJECT_PATH_SLUG}_${CI_COMMIT_REF_NAME}_pipeline${CI_PIPELINE_ID}_job${CI_JOB_ID}"
        when: on_success
        expire_in: 1 mos and 2 weeks
        paths: 
          - publish/
    only:
        - master   

.job_build_image:
    stage: build
    before_script:
      - docker --version
      - docker login -u 南宫伊沫 -p $CIPASSWORD $registry
    script:
      - docker build --build-arg GIT_COMMIT=$CI_COMMIT_SHA -t $registry/liuyang/blog:${IMAGE_TAG} .
      - docker push $registry/liuyang/blog:${IMAGE_TAG}
    only:
      - master 
      - /^feature-.*$/
    allow_failure: false
    tags:
      - runner02
 
deploy_gdev:
    stage: deploy
    variables:
        DOMAIN: 47.101.152.254:8080 
    before_script:
        - if [ $(docker ps -a -q -f name=blog-api) ];then  docker stop $(docker ps -a -q -f name=blog-api);fi
        - if [ $(docker ps -a -q -f name=blog-api) ];then  docker rm $(docker ps -a -q -f name=blog-api);fi
    script:
         - docker-compose up -d  --build
    after_script:
         - docker image prune -f -a
    environment:
        name: gdev
        url: http://${DOMAIN}/swagger/
    when: on_success
    tags:
        - runner02
    only:
        - master   

